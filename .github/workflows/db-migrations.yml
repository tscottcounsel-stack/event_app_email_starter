import os, sys
import psycopg2

def main():
    url = os.getenv("DATABASE_URL", "postgresql+psycopg2://postgres:postgres@127.0.0.1:5432/eventdb")
    # psycopg2 expects a plain URL without sqlalchemy+driver prefix
    pgurl = url.replace("postgresql+psycopg2://", "postgresql://")
    conn = psycopg2.connect(pgurl)
    cur = conn.cursor()

    checks = []

    cur.execute("""
      SELECT EXISTS (
        SELECT 1
        FROM pg_enum e JOIN pg_type t ON t.oid = e.enumtypid
        WHERE t.typname='userrole' AND e.enumlabel='admin'
      );
    """)
    checks.append(("enum userrole has 'admin'", cur.fetchone()[0]))

    cur.execute("""
      SELECT EXISTS (
        SELECT 1
        FROM pg_constraint c
        JOIN pg_class t ON t.oid = c.conrelid
        WHERE t.relname='event_slots'
          AND c.conname='event_slots_event_id_label_key'
      );
    """)
    checks.append(("unique on event_slots(event_id,label)", cur.fetchone()[0]))

    cur.execute("""
      SELECT EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname='public' AND tablename='event_slots' AND indexname='ix_event_slots_event_id'
      );
    """)
    checks.append(("index ix_event_slots_event_id present", cur.fetchone()[0]))

    cur.execute("""
      SELECT EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_schema='public' AND table_name='applications' AND column_name='slot_id'
      );
    """)
    checks.append(("applications.slot_id column exists", cur.fetchone()[0]))

    cur.execute("""
      SELECT EXISTS (
        SELECT 1
        FROM information_schema.table_constraints
        WHERE table_schema='public' AND table_name='applications'
          AND constraint_type='FOREIGN KEY'
          AND constraint_name='applications_slot_id_fkey'
      );
    """)
    checks.append(("applications_slot_id_fkey present", cur.fetchone()[0]))

    bad = [name for name, ok in checks if not ok]
    for name, ok in checks:
      print(f"{'OK  ' if ok else 'FAIL'} {name}")
    if bad:
      print("Smoke test FAILED:", bad)
      sys.exit(1)
    print("Smoke test PASSED")

if __name__ == "__main__":
    main()
