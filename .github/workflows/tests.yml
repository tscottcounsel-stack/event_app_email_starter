name: tests

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eventdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d eventdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=12
    env:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@127.0.0.1:5432/eventdb
      PYTHONPATH: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install deps
        shell: bash
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install "psycopg[binary]" SQLAlchemy alembic python-dotenv pytest requests

      - name: Wait for Postgres
        shell: bash
        run: |
          set -euxo pipefail
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then break; fi
            sleep 2
          done

      - name: Alembic upgrade
        shell: bash
        run: |
          set -euxo pipefail
          alembic upgrade head

      - name: Start FastAPI server (background) and wait until ready
        shell: bash
        run: |
          set -euxo pipefail
          uvicorn app.main:app --host 127.0.0.1 --port 8000 &
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8000/docs >/dev/null; then
              echo "API is up"
              break
            fi
            sleep 1
          done

      - name: Run tests
        shell: bash
        run: |
          set -euxo pipefail
          pytest -q
