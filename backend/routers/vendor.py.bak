from backend.deps import get_current_user

from fastapi import APIRouter, Depends
from core.deps import get_current_user  # <<< add this import
from __future__ import annotations

from fastapi import APIRouter, Depends, HTTPException, status
from sqlalchemy.orm import Session

from backend.deps import get_db, require_vendor
from backend.models import Vendor, User
from backend.schemas.vendor import VendorCreate, VendorRead

router = APIRouter(prefix="/vendors", tags=["vendors"])


@router.post("", response_model=VendorRead)
def create_vendor(payload: VendorCreate, db: Session = Depends(get_db), user: User = Depends(require_vendor)):
    if user.vendor:
        raise HTTPException(status_code=400, detail="Vendor profile already exists")
    vendor = Vendor(
        user_id=user.id,
        business_name=payload.business_name,
        display_name=payload.display_name,
        description=payload.description,
    )
    db.add(vendor)
    db.commit()
    db.refresh(vendor)
    return vendor


@router.get("/{vendor_id}", response_model=VendorRead)
def get_vendor(vendor_id: int, db: Session = Depends(get_db)):
    vendor = db.get(Vendor, vendor_id)
    if not vendor:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Vendor not found")
    return vendor

