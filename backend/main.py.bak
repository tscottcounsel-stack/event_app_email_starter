from __future__ import annotations

from fastapi import FastAPI, Depends
from sqlalchemy.orm import Session

from backend.config.database import get_db, dispose_engine
from backend.models.user import User

from backend.routers import auth as auth_router
from backend.routers import events as events_router
from backend.routers import vendors as vendors_router
from backend.routers import applications as applications_router

app = FastAPI(title="Event App", version="1.0")

app.include_router(auth_router.router)
app.include_router(events_router.router)
app.include_router(vendors_router.router)
app.include_router(applications_router.router)

@app.get("/")
def root():
    return {"message": "ok"}

@app.get("/ping")
def ping():
    return {"message": "pong"}

@app.get("/users/")
def list_users(db: Session = Depends(get_db)):
    users = db.query(User).all()
    return [{"id": u.id, "email": u.email, "role": u.role} for u in users]

@app.on_event("shutdown")
def _shutdown_dispose_engine():
    dispose_engine()
